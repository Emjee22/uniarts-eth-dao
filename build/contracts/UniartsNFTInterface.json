{
  "contractName": "UniartsNFTInterface",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user_address",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "class_id",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "size",
          "type": "uint8"
        }
      ],
      "name": "createNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getNFT",
      "outputs": [
        {
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "class_id",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "size",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_approved",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_address\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"class_id\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"size\",\"type\":\"uint8\"}],\"name\":\"createNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getNFT\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"class_id\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"size\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"This emits when the approved address for an NFT is changed or  reaffirmed. The zero address indicates there is no approved address.  When a Transfer event emits, this also indicates that the approved  address for that NFT (if any) is reset to none.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"This emits when an operator is enabled or disabled for an owner.  The operator can manage all NFTs of the owner.\"},\"Transfer(address,address,uint256)\":{\"details\":\"This emits when ownership of any NFT changes by any mechanism.  This event emits when NFTs are created (`from` == 0) and destroyed  (`to` == 0). Exception: during contract creation, any number of NFTs  may be created and assigned without emitting Transfer. At the time of  any transfer, the approved address for that NFT (if any) is reset to none.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"The zero address indicates there is no approved address.  Throws unless `msg.sender` is the current NFT owner, or an authorized  operator of the current owner.\",\"params\":{\"_approved\":\"The new approved NFT controller\",\"_tokenId\":\"The NFT to approve\"}},\"balanceOf(address)\":{\"details\":\"NFTs assigned to the zero address are considered invalid, and this  function throws for queries about the zero address.\",\"params\":{\"_owner\":\"An address for whom to query the balance\"},\"returns\":{\"_0\":\"The number of NFTs owned by `_owner`, possibly zero\"}},\"createNFT(address,string,uint8,uint8)\":{\"details\":\"Creates a new NFT\"},\"getApproved(uint256)\":{\"details\":\"Throws if `_tokenId` is not a valid NFT.\",\"params\":{\"_tokenId\":\"The NFT to find the approved address for\"},\"returns\":{\"_0\":\"The approved address for this NFT, or the zero address if there is none\"}},\"getNFT(uint256)\":{\"details\":\"Gets a NFT info\"},\"isApprovedForAll(address,address)\":{\"params\":{\"_operator\":\"The address that acts on behalf of the owner\",\"_owner\":\"The address that owns the NFTs\"},\"returns\":{\"_0\":\"True if `_operator` is an approved operator for `_owner`, false otherwise\"}},\"ownerOf(uint256)\":{\"details\":\"NFTs assigned to zero address are considered invalid, and queries  about them do throw.\",\"params\":{\"_tokenId\":\"The identifier for an NFT\"},\"returns\":{\"_0\":\"The address of the owner of the NFT\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"This works identically to the other function with an extra data parameter,  except this function just sets data to \\\"\\\".\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT. When transfer is complete, this function  checks if `_to` is a smart contract (code size > 0). If so, it calls  `onERC721Received` on `_to` and throws if the return value is not  `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`.\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\",\"data\":\"Additional data with no specified format, sent in call to `_to`\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Emits the ApprovalForAll event. The contract MUST allow  multiple operators per owner.\",\"params\":{\"_approved\":\"True if the operator is approved, false to revoke approval\",\"_operator\":\"Address to add to the set of authorized operators\"}},\"supportsInterface(bytes4)\":{\"details\":\"Interface identification is specified in ERC-165. This function  uses less than 30,000 gas.\",\"params\":{\"interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `interfaceID` and  `interfaceID` is not 0xffffffff, `false` otherwise\"}},\"tokenByIndex(uint256)\":{\"details\":\"Throws if `_index` >= `totalSupply()`.\",\"params\":{\"_index\":\"A counter less than `totalSupply()`\"},\"returns\":{\"_0\":\"The token identifier for the `_index`th NFT,  (sort order not specified)\"}},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Throws if `_index` >= `balanceOf(_owner)` or if  `_owner` is the zero address, representing invalid NFTs.\",\"params\":{\"_index\":\"A counter less than `balanceOf(_owner)`\",\"_owner\":\"An address where we are interested in NFTs owned by them\"},\"returns\":{\"_0\":\"The token identifier for the `_index`th NFT assigned to `_owner`,   (sort order not specified)\"}},\"totalSupply()\":{\"returns\":{\"_0\":\"A count of valid NFTs tracked by this contract, where each one of  them has an assigned and queryable owner not equal to the zero address\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT.\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}}},\"title\":\"Interface for our ERC721 token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve(address,uint256)\":{\"notice\":\"Change or reaffirm the approved address for an NFT\"},\"balanceOf(address)\":{\"notice\":\"Count all NFTs assigned to an owner\"},\"getApproved(uint256)\":{\"notice\":\"Get the approved address for a single NFT\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Query if an address is an authorized operator for another address\"},\"ownerOf(uint256)\":{\"notice\":\"Find the owner of an NFT\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Enable or disable approval for a third party (\\\"operator\\\") to manage  all of `msg.sender`'s assets\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"},\"tokenByIndex(uint256)\":{\"notice\":\"Enumerate valid NFTs\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"notice\":\"Enumerate NFTs assigned to an owner\"},\"totalSupply()\":{\"notice\":\"Count NFTs tracked by this contract\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE  THEY MAY BE PERMANENTLY LOST\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/tuminfei/Code/Nodejs/uniarts-eth-dao/contracts/core/interfaces/UniartsNFTInterface.sol\":\"UniartsNFTInterface\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/tuminfei/Code/Nodejs/uniarts-eth-dao/contracts/core/interfaces/UniartsNFTInterface.sol\":{\"keccak256\":\"0xabd2b6bbf888798add6e078239168eb808a9f6437e58ebb1069d2c996262a3d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c1c1bddf47ef84d3691dd7469dea1cee63317d5916deefe73fd3cd99492158a8\",\"dweb:/ipfs/QmcrjwrFmsLqiUrRuAGoygwcQ3LxEkAv7DwHwkns5Neb2k\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n\n/**\n * @title Interface for our ERC721 token\n */\ninterface UniartsNFTInterface {\n  /* Our custom functions go here */\n\n  /**\n   * @dev Creates a new NFT\n   */\n  function createNFT(\n    address user_address,\n    string calldata title,\n    uint8 class_id,\n    uint8 size\n    ) external;\n\n  /**\n   * @dev Gets a NFT info\n   */\n  function getNFT(\n    uint tokenId\n  ) external view returns (\n    string memory title,\n    uint8 class_id,\n    uint8 size\n  );\n\n  /* Standard functions */\n\n  /// @dev This emits when ownership of any NFT changes by any mechanism.\n  ///  This event emits when NFTs are created (`from` == 0) and destroyed\n  ///  (`to` == 0). Exception: during contract creation, any number of NFTs\n  ///  may be created and assigned without emitting Transfer. At the time of\n  ///  any transfer, the approved address for that NFT (if any) is reset to none.\n  event Transfer(address indexed _from, address indexed _to, uint256 indexed _tokenId);\n\n  /// @dev This emits when the approved address for an NFT is changed or\n  ///  reaffirmed. The zero address indicates there is no approved address.\n  ///  When a Transfer event emits, this also indicates that the approved\n  ///  address for that NFT (if any) is reset to none.\n  event Approval(address indexed _owner, address indexed _approved, uint256 indexed _tokenId);\n\n  /// @dev This emits when an operator is enabled or disabled for an owner.\n  ///  The operator can manage all NFTs of the owner.\n  event ApprovalForAll(address indexed _owner, address indexed _operator, bool _approved);\n\n  /// @notice Count all NFTs assigned to an owner\n  /// @dev NFTs assigned to the zero address are considered invalid, and this\n  ///  function throws for queries about the zero address.\n  /// @param _owner An address for whom to query the balance\n  /// @return The number of NFTs owned by `_owner`, possibly zero\n  function balanceOf(address _owner) external view returns (uint256);\n\n  /// @notice Find the owner of an NFT\n  /// @dev NFTs assigned to zero address are considered invalid, and queries\n  ///  about them do throw.\n  /// @param _tokenId The identifier for an NFT\n  /// @return The address of the owner of the NFT\n  function ownerOf(uint256 _tokenId) external view returns (address);\n\n  /// @notice Transfers the ownership of an NFT from one address to another address\n  /// @dev Throws unless `msg.sender` is the current owner, an authorized\n  ///  operator, or the approved address for this NFT. Throws if `_from` is\n  ///  not the current owner. Throws if `_to` is the zero address. Throws if\n  ///  `_tokenId` is not a valid NFT. When transfer is complete, this function\n  ///  checks if `_to` is a smart contract (code size > 0). If so, it calls\n  ///  `onERC721Received` on `_to` and throws if the return value is not\n  ///  `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.\n  /// @param _from The current owner of the NFT\n  /// @param _to The new owner\n  /// @param _tokenId The NFT to transfer\n  /// @param data Additional data with no specified format, sent in call to `_to`\n  function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes calldata data) external payable;\n\n  /// @notice Transfers the ownership of an NFT from one address to another address\n  /// @dev This works identically to the other function with an extra data parameter,\n  ///  except this function just sets data to \"\".\n  /// @param _from The current owner of the NFT\n  /// @param _to The new owner\n  /// @param _tokenId The NFT to transfer\n  function safeTransferFrom(address _from, address _to, uint256 _tokenId) external payable;\n\n  /// @notice Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE\n  ///  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE\n  ///  THEY MAY BE PERMANENTLY LOST\n  /// @dev Throws unless `msg.sender` is the current owner, an authorized\n  ///  operator, or the approved address for this NFT. Throws if `_from` is\n  ///  not the current owner. Throws if `_to` is the zero address. Throws if\n  ///  `_tokenId` is not a valid NFT.\n  /// @param _from The current owner of the NFT\n  /// @param _to The new owner\n  /// @param _tokenId The NFT to transfer\n  function transferFrom(address _from, address _to, uint256 _tokenId) external payable;\n\n  /// @notice Change or reaffirm the approved address for an NFT\n  /// @dev The zero address indicates there is no approved address.\n  ///  Throws unless `msg.sender` is the current NFT owner, or an authorized\n  ///  operator of the current owner.\n  /// @param _approved The new approved NFT controller\n  /// @param _tokenId The NFT to approve\n  function approve(address _approved, uint256 _tokenId) external payable;\n\n  /// @notice Enable or disable approval for a third party (\"operator\") to manage\n  ///  all of `msg.sender`'s assets\n  /// @dev Emits the ApprovalForAll event. The contract MUST allow\n  ///  multiple operators per owner.\n  /// @param _operator Address to add to the set of authorized operators\n  /// @param _approved True if the operator is approved, false to revoke approval\n  function setApprovalForAll(address _operator, bool _approved) external;\n\n  /// @notice Get the approved address for a single NFT\n  /// @dev Throws if `_tokenId` is not a valid NFT.\n  /// @param _tokenId The NFT to find the approved address for\n  /// @return The approved address for this NFT, or the zero address if there is none\n  function getApproved(uint256 _tokenId) external view returns (address);\n\n  /// @notice Query if an address is an authorized operator for another address\n  /// @param _owner The address that owns the NFTs\n  /// @param _operator The address that acts on behalf of the owner\n  /// @return True if `_operator` is an approved operator for `_owner`, false otherwise\n  function isApprovedForAll(address _owner, address _operator) external view returns (bool);\n\n  /// @notice Query if a contract implements an interface\n  /// @param interfaceID The interface identifier, as specified in ERC-165\n  /// @dev Interface identification is specified in ERC-165. This function\n  ///  uses less than 30,000 gas.\n  /// @return `true` if the contract implements `interfaceID` and\n  ///  `interfaceID` is not 0xffffffff, `false` otherwise\n  function supportsInterface(bytes4 interfaceID) external view returns (bool);\n\n  /// @notice Count NFTs tracked by this contract\n  /// @return A count of valid NFTs tracked by this contract, where each one of\n  ///  them has an assigned and queryable owner not equal to the zero address\n  function totalSupply() external view returns (uint256);\n\n  /// @notice Enumerate valid NFTs\n  /// @dev Throws if `_index` >= `totalSupply()`.\n  /// @param _index A counter less than `totalSupply()`\n  /// @return The token identifier for the `_index`th NFT,\n  ///  (sort order not specified)\n  function tokenByIndex(uint256 _index) external view returns (uint256);\n\n  /// @notice Enumerate NFTs assigned to an owner\n  /// @dev Throws if `_index` >= `balanceOf(_owner)` or if\n  ///  `_owner` is the zero address, representing invalid NFTs.\n  /// @param _owner An address where we are interested in NFTs owned by them\n  /// @param _index A counter less than `balanceOf(_owner)`\n  /// @return The token identifier for the `_index`th NFT assigned to `_owner`,\n  ///   (sort order not specified)\n  function tokenOfOwnerByIndex(address _owner, uint256 _index) external view returns (uint256);\n}\n",
  "sourcePath": "/Users/tuminfei/Code/Nodejs/uniarts-eth-dao/contracts/core/interfaces/UniartsNFTInterface.sol",
  "ast": {
    "absolutePath": "/Users/tuminfei/Code/Nodejs/uniarts-eth-dao/contracts/core/interfaces/UniartsNFTInterface.sol",
    "exportedSymbols": {
      "UniartsNFTInterface": [
        18108
      ]
    },
    "id": 18109,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 17941,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:26"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 17942,
          "nodeType": "StructuredDocumentation",
          "src": "58:48:26",
          "text": " @title Interface for our ERC721 token"
        },
        "fullyImplemented": false,
        "id": 18108,
        "linearizedBaseContracts": [
          18108
        ],
        "name": "UniartsNFTInterface",
        "nameLocation": "117:19:26",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 17943,
              "nodeType": "StructuredDocumentation",
              "src": "179:37:26",
              "text": " @dev Creates a new NFT"
            },
            "functionSelector": "5c1d7a6a",
            "id": 17954,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "createNFT",
            "nameLocation": "228:9:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17952,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17945,
                  "mutability": "mutable",
                  "name": "user_address",
                  "nameLocation": "251:12:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 17954,
                  "src": "243:20:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17944,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "243:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17947,
                  "mutability": "mutable",
                  "name": "title",
                  "nameLocation": "285:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 17954,
                  "src": "269:21:26",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 17946,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "269:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17949,
                  "mutability": "mutable",
                  "name": "class_id",
                  "nameLocation": "302:8:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 17954,
                  "src": "296:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 17948,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "296:5:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17951,
                  "mutability": "mutable",
                  "name": "size",
                  "nameLocation": "322:4:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 17954,
                  "src": "316:10:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 17950,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "316:5:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "237:95:26"
            },
            "returnParameters": {
              "id": 17953,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "341:0:26"
            },
            "scope": 18108,
            "src": "219:123:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 17955,
              "nodeType": "StructuredDocumentation",
              "src": "346:35:26",
              "text": " @dev Gets a NFT info"
            },
            "functionSelector": "576f7ea7",
            "id": 17966,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getNFT",
            "nameLocation": "393:6:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17958,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17957,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "410:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 17966,
                  "src": "405:12:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17956,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "405:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "399:22:26"
            },
            "returnParameters": {
              "id": 17965,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17960,
                  "mutability": "mutable",
                  "name": "title",
                  "nameLocation": "464:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 17966,
                  "src": "450:19:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 17959,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "450:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17962,
                  "mutability": "mutable",
                  "name": "class_id",
                  "nameLocation": "481:8:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 17966,
                  "src": "475:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 17961,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "475:5:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17964,
                  "mutability": "mutable",
                  "name": "size",
                  "nameLocation": "501:4:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 17966,
                  "src": "495:10:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 17963,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "495:5:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "444:65:26"
            },
            "scope": 18108,
            "src": "384:126:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 17967,
              "nodeType": "StructuredDocumentation",
              "src": "542:380:26",
              "text": "@dev This emits when ownership of any NFT changes by any mechanism.\n  This event emits when NFTs are created (`from` == 0) and destroyed\n  (`to` == 0). Exception: during contract creation, any number of NFTs\n  may be created and assigned without emitting Transfer. At the time of\n  any transfer, the approved address for that NFT (if any) is reset to none."
            },
            "id": 17975,
            "name": "Transfer",
            "nameLocation": "931:8:26",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 17974,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17969,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "956:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 17975,
                  "src": "940:21:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17968,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "940:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17971,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "979:3:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 17975,
                  "src": "963:19:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17970,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "963:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17973,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1000:8:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 17975,
                  "src": "984:24:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17972,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "984:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "939:70:26"
            },
            "src": "925:85:26"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 17976,
              "nodeType": "StructuredDocumentation",
              "src": "1014:275:26",
              "text": "@dev This emits when the approved address for an NFT is changed or\n  reaffirmed. The zero address indicates there is no approved address.\n  When a Transfer event emits, this also indicates that the approved\n  address for that NFT (if any) is reset to none."
            },
            "id": 17984,
            "name": "Approval",
            "nameLocation": "1298:8:26",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 17983,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17978,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "1323:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 17984,
                  "src": "1307:22:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17977,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1307:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17980,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_approved",
                  "nameLocation": "1347:9:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 17984,
                  "src": "1331:25:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17979,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1331:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17982,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1374:8:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 17984,
                  "src": "1358:24:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17981,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1358:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1306:77:26"
            },
            "src": "1292:92:26"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 17985,
              "nodeType": "StructuredDocumentation",
              "src": "1388:127:26",
              "text": "@dev This emits when an operator is enabled or disabled for an owner.\n  The operator can manage all NFTs of the owner."
            },
            "id": 17993,
            "name": "ApprovalForAll",
            "nameLocation": "1524:14:26",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 17992,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17987,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "1555:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 17993,
                  "src": "1539:22:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17986,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1539:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17989,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_operator",
                  "nameLocation": "1579:9:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 17993,
                  "src": "1563:25:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17988,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1563:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17991,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_approved",
                  "nameLocation": "1595:9:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 17993,
                  "src": "1590:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 17990,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1590:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1538:67:26"
            },
            "src": "1518:88:26"
          },
          {
            "documentation": {
              "id": 17994,
              "nodeType": "StructuredDocumentation",
              "src": "1610:311:26",
              "text": "@notice Count all NFTs assigned to an owner\n @dev NFTs assigned to the zero address are considered invalid, and this\n  function throws for queries about the zero address.\n @param _owner An address for whom to query the balance\n @return The number of NFTs owned by `_owner`, possibly zero"
            },
            "functionSelector": "70a08231",
            "id": 18001,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "1933:9:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17997,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17996,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "1951:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 18001,
                  "src": "1943:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17995,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1943:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1942:16:26"
            },
            "returnParameters": {
              "id": 18000,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17999,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18001,
                  "src": "1982:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17998,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1982:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1981:9:26"
            },
            "scope": 18108,
            "src": "1924:67:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 18002,
              "nodeType": "StructuredDocumentation",
              "src": "1995:239:26",
              "text": "@notice Find the owner of an NFT\n @dev NFTs assigned to zero address are considered invalid, and queries\n  about them do throw.\n @param _tokenId The identifier for an NFT\n @return The address of the owner of the NFT"
            },
            "functionSelector": "6352211e",
            "id": 18009,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "2246:7:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18005,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18004,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "2262:8:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 18009,
                  "src": "2254:16:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18003,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2254:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2253:18:26"
            },
            "returnParameters": {
              "id": 18008,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18007,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18009,
                  "src": "2295:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18006,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2295:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2294:9:26"
            },
            "scope": 18108,
            "src": "2237:67:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 18010,
              "nodeType": "StructuredDocumentation",
              "src": "2308:818:26",
              "text": "@notice Transfers the ownership of an NFT from one address to another address\n @dev Throws unless `msg.sender` is the current owner, an authorized\n  operator, or the approved address for this NFT. Throws if `_from` is\n  not the current owner. Throws if `_to` is the zero address. Throws if\n  `_tokenId` is not a valid NFT. When transfer is complete, this function\n  checks if `_to` is a smart contract (code size > 0). If so, it calls\n  `onERC721Received` on `_to` and throws if the return value is not\n  `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.\n @param _from The current owner of the NFT\n @param _to The new owner\n @param _tokenId The NFT to transfer\n @param data Additional data with no specified format, sent in call to `_to`"
            },
            "functionSelector": "b88d4fde",
            "id": 18021,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "3138:16:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18019,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18012,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "3163:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 18021,
                  "src": "3155:13:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18011,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3155:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18014,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "3178:3:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 18021,
                  "src": "3170:11:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18013,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3170:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18016,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "3191:8:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 18021,
                  "src": "3183:16:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18015,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3183:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18018,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "3216:4:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 18021,
                  "src": "3201:19:26",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 18017,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3201:5:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3154:67:26"
            },
            "returnParameters": {
              "id": 18020,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3238:0:26"
            },
            "scope": 18108,
            "src": "3129:110:26",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 18022,
              "nodeType": "StructuredDocumentation",
              "src": "3243:338:26",
              "text": "@notice Transfers the ownership of an NFT from one address to another address\n @dev This works identically to the other function with an extra data parameter,\n  except this function just sets data to \"\".\n @param _from The current owner of the NFT\n @param _to The new owner\n @param _tokenId The NFT to transfer"
            },
            "functionSelector": "42842e0e",
            "id": 18031,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "3593:16:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18029,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18024,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "3618:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 18031,
                  "src": "3610:13:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18023,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3610:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18026,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "3633:3:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 18031,
                  "src": "3625:11:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18025,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3625:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18028,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "3646:8:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 18031,
                  "src": "3638:16:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18027,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3638:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3609:46:26"
            },
            "returnParameters": {
              "id": 18030,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3672:0:26"
            },
            "scope": 18108,
            "src": "3584:89:26",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 18032,
              "nodeType": "StructuredDocumentation",
              "src": "3677:557:26",
              "text": "@notice Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE\n  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE\n  THEY MAY BE PERMANENTLY LOST\n @dev Throws unless `msg.sender` is the current owner, an authorized\n  operator, or the approved address for this NFT. Throws if `_from` is\n  not the current owner. Throws if `_to` is the zero address. Throws if\n  `_tokenId` is not a valid NFT.\n @param _from The current owner of the NFT\n @param _to The new owner\n @param _tokenId The NFT to transfer"
            },
            "functionSelector": "23b872dd",
            "id": 18041,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "4246:12:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18039,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18034,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "4267:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 18041,
                  "src": "4259:13:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18033,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4259:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18036,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "4282:3:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 18041,
                  "src": "4274:11:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18035,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4274:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18038,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "4295:8:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 18041,
                  "src": "4287:16:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18037,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4287:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4258:46:26"
            },
            "returnParameters": {
              "id": 18040,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4321:0:26"
            },
            "scope": 18108,
            "src": "4237:85:26",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 18042,
              "nodeType": "StructuredDocumentation",
              "src": "4326:341:26",
              "text": "@notice Change or reaffirm the approved address for an NFT\n @dev The zero address indicates there is no approved address.\n  Throws unless `msg.sender` is the current NFT owner, or an authorized\n  operator of the current owner.\n @param _approved The new approved NFT controller\n @param _tokenId The NFT to approve"
            },
            "functionSelector": "095ea7b3",
            "id": 18049,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "4679:7:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18047,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18044,
                  "mutability": "mutable",
                  "name": "_approved",
                  "nameLocation": "4695:9:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 18049,
                  "src": "4687:17:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18043,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4687:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18046,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "4714:8:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 18049,
                  "src": "4706:16:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18045,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4706:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4686:37:26"
            },
            "returnParameters": {
              "id": 18048,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4740:0:26"
            },
            "scope": 18108,
            "src": "4670:71:26",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 18050,
              "nodeType": "StructuredDocumentation",
              "src": "4745:374:26",
              "text": "@notice Enable or disable approval for a third party (\"operator\") to manage\n  all of `msg.sender`'s assets\n @dev Emits the ApprovalForAll event. The contract MUST allow\n  multiple operators per owner.\n @param _operator Address to add to the set of authorized operators\n @param _approved True if the operator is approved, false to revoke approval"
            },
            "functionSelector": "a22cb465",
            "id": 18057,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "5131:17:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18055,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18052,
                  "mutability": "mutable",
                  "name": "_operator",
                  "nameLocation": "5157:9:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 18057,
                  "src": "5149:17:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18051,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5149:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18054,
                  "mutability": "mutable",
                  "name": "_approved",
                  "nameLocation": "5173:9:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 18057,
                  "src": "5168:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 18053,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5168:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5148:35:26"
            },
            "returnParameters": {
              "id": 18056,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5192:0:26"
            },
            "scope": 18108,
            "src": "5122:71:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 18058,
              "nodeType": "StructuredDocumentation",
              "src": "5197:254:26",
              "text": "@notice Get the approved address for a single NFT\n @dev Throws if `_tokenId` is not a valid NFT.\n @param _tokenId The NFT to find the approved address for\n @return The approved address for this NFT, or the zero address if there is none"
            },
            "functionSelector": "081812fc",
            "id": 18065,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nameLocation": "5463:11:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18061,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18060,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "5483:8:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 18065,
                  "src": "5475:16:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18059,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5475:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5474:18:26"
            },
            "returnParameters": {
              "id": 18064,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18063,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18065,
                  "src": "5516:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18062,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5516:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5515:9:26"
            },
            "scope": 18108,
            "src": "5454:71:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 18066,
              "nodeType": "StructuredDocumentation",
              "src": "5529:284:26",
              "text": "@notice Query if an address is an authorized operator for another address\n @param _owner The address that owns the NFTs\n @param _operator The address that acts on behalf of the owner\n @return True if `_operator` is an approved operator for `_owner`, false otherwise"
            },
            "functionSelector": "e985e9c5",
            "id": 18075,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "5825:16:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18071,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18068,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "5850:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 18075,
                  "src": "5842:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18067,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5842:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18070,
                  "mutability": "mutable",
                  "name": "_operator",
                  "nameLocation": "5866:9:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 18075,
                  "src": "5858:17:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18069,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5858:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5841:35:26"
            },
            "returnParameters": {
              "id": 18074,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18073,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18075,
                  "src": "5900:4:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 18072,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5900:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5899:6:26"
            },
            "scope": 18108,
            "src": "5816:90:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 18076,
              "nodeType": "StructuredDocumentation",
              "src": "5910:363:26",
              "text": "@notice Query if a contract implements an interface\n @param interfaceID The interface identifier, as specified in ERC-165\n @dev Interface identification is specified in ERC-165. This function\n  uses less than 30,000 gas.\n @return `true` if the contract implements `interfaceID` and\n  `interfaceID` is not 0xffffffff, `false` otherwise"
            },
            "functionSelector": "01ffc9a7",
            "id": 18083,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "6285:17:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18079,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18078,
                  "mutability": "mutable",
                  "name": "interfaceID",
                  "nameLocation": "6310:11:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 18083,
                  "src": "6303:18:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 18077,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "6303:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6302:20:26"
            },
            "returnParameters": {
              "id": 18082,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18081,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18083,
                  "src": "6346:4:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 18080,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6346:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6345:6:26"
            },
            "scope": 18108,
            "src": "6276:76:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 18084,
              "nodeType": "StructuredDocumentation",
              "src": "6356:205:26",
              "text": "@notice Count NFTs tracked by this contract\n @return A count of valid NFTs tracked by this contract, where each one of\n  them has an assigned and queryable owner not equal to the zero address"
            },
            "functionSelector": "18160ddd",
            "id": 18089,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "6573:11:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18085,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6584:2:26"
            },
            "returnParameters": {
              "id": 18088,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18087,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18089,
                  "src": "6610:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18086,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6610:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6609:9:26"
            },
            "scope": 18108,
            "src": "6564:55:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 18090,
              "nodeType": "StructuredDocumentation",
              "src": "6623:231:26",
              "text": "@notice Enumerate valid NFTs\n @dev Throws if `_index` >= `totalSupply()`.\n @param _index A counter less than `totalSupply()`\n @return The token identifier for the `_index`th NFT,\n  (sort order not specified)"
            },
            "functionSelector": "4f6ccce7",
            "id": 18097,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tokenByIndex",
            "nameLocation": "6866:12:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18093,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18092,
                  "mutability": "mutable",
                  "name": "_index",
                  "nameLocation": "6887:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 18097,
                  "src": "6879:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18091,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6879:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6878:16:26"
            },
            "returnParameters": {
              "id": 18096,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18095,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18097,
                  "src": "6918:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18094,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6918:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6917:9:26"
            },
            "scope": 18108,
            "src": "6857:70:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 18098,
              "nodeType": "StructuredDocumentation",
              "src": "6931:422:26",
              "text": "@notice Enumerate NFTs assigned to an owner\n @dev Throws if `_index` >= `balanceOf(_owner)` or if\n  `_owner` is the zero address, representing invalid NFTs.\n @param _owner An address where we are interested in NFTs owned by them\n @param _index A counter less than `balanceOf(_owner)`\n @return The token identifier for the `_index`th NFT assigned to `_owner`,\n   (sort order not specified)"
            },
            "functionSelector": "2f745c59",
            "id": 18107,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tokenOfOwnerByIndex",
            "nameLocation": "7365:19:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18100,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "7393:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 18107,
                  "src": "7385:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18099,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7385:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18102,
                  "mutability": "mutable",
                  "name": "_index",
                  "nameLocation": "7409:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 18107,
                  "src": "7401:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18101,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7401:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7384:32:26"
            },
            "returnParameters": {
              "id": 18106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18105,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18107,
                  "src": "7440:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7440:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7439:9:26"
            },
            "scope": 18108,
            "src": "7356:93:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 18109,
        "src": "107:7344:26",
        "usedErrors": []
      }
    ],
    "src": "32:7420:26"
  },
  "legacyAST": {
    "absolutePath": "/Users/tuminfei/Code/Nodejs/uniarts-eth-dao/contracts/core/interfaces/UniartsNFTInterface.sol",
    "exportedSymbols": {
      "UniartsNFTInterface": [
        18108
      ]
    },
    "id": 18109,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 17941,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:26"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 17942,
          "nodeType": "StructuredDocumentation",
          "src": "58:48:26",
          "text": " @title Interface for our ERC721 token"
        },
        "fullyImplemented": false,
        "id": 18108,
        "linearizedBaseContracts": [
          18108
        ],
        "name": "UniartsNFTInterface",
        "nameLocation": "117:19:26",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 17943,
              "nodeType": "StructuredDocumentation",
              "src": "179:37:26",
              "text": " @dev Creates a new NFT"
            },
            "functionSelector": "5c1d7a6a",
            "id": 17954,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "createNFT",
            "nameLocation": "228:9:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17952,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17945,
                  "mutability": "mutable",
                  "name": "user_address",
                  "nameLocation": "251:12:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 17954,
                  "src": "243:20:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17944,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "243:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17947,
                  "mutability": "mutable",
                  "name": "title",
                  "nameLocation": "285:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 17954,
                  "src": "269:21:26",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 17946,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "269:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17949,
                  "mutability": "mutable",
                  "name": "class_id",
                  "nameLocation": "302:8:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 17954,
                  "src": "296:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 17948,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "296:5:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17951,
                  "mutability": "mutable",
                  "name": "size",
                  "nameLocation": "322:4:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 17954,
                  "src": "316:10:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 17950,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "316:5:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "237:95:26"
            },
            "returnParameters": {
              "id": 17953,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "341:0:26"
            },
            "scope": 18108,
            "src": "219:123:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 17955,
              "nodeType": "StructuredDocumentation",
              "src": "346:35:26",
              "text": " @dev Gets a NFT info"
            },
            "functionSelector": "576f7ea7",
            "id": 17966,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getNFT",
            "nameLocation": "393:6:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17958,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17957,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "410:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 17966,
                  "src": "405:12:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17956,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "405:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "399:22:26"
            },
            "returnParameters": {
              "id": 17965,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17960,
                  "mutability": "mutable",
                  "name": "title",
                  "nameLocation": "464:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 17966,
                  "src": "450:19:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 17959,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "450:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17962,
                  "mutability": "mutable",
                  "name": "class_id",
                  "nameLocation": "481:8:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 17966,
                  "src": "475:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 17961,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "475:5:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17964,
                  "mutability": "mutable",
                  "name": "size",
                  "nameLocation": "501:4:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 17966,
                  "src": "495:10:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 17963,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "495:5:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "444:65:26"
            },
            "scope": 18108,
            "src": "384:126:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 17967,
              "nodeType": "StructuredDocumentation",
              "src": "542:380:26",
              "text": "@dev This emits when ownership of any NFT changes by any mechanism.\n  This event emits when NFTs are created (`from` == 0) and destroyed\n  (`to` == 0). Exception: during contract creation, any number of NFTs\n  may be created and assigned without emitting Transfer. At the time of\n  any transfer, the approved address for that NFT (if any) is reset to none."
            },
            "id": 17975,
            "name": "Transfer",
            "nameLocation": "931:8:26",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 17974,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17969,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "956:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 17975,
                  "src": "940:21:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17968,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "940:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17971,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "979:3:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 17975,
                  "src": "963:19:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17970,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "963:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17973,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1000:8:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 17975,
                  "src": "984:24:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17972,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "984:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "939:70:26"
            },
            "src": "925:85:26"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 17976,
              "nodeType": "StructuredDocumentation",
              "src": "1014:275:26",
              "text": "@dev This emits when the approved address for an NFT is changed or\n  reaffirmed. The zero address indicates there is no approved address.\n  When a Transfer event emits, this also indicates that the approved\n  address for that NFT (if any) is reset to none."
            },
            "id": 17984,
            "name": "Approval",
            "nameLocation": "1298:8:26",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 17983,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17978,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "1323:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 17984,
                  "src": "1307:22:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17977,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1307:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17980,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_approved",
                  "nameLocation": "1347:9:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 17984,
                  "src": "1331:25:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17979,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1331:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17982,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1374:8:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 17984,
                  "src": "1358:24:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17981,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1358:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1306:77:26"
            },
            "src": "1292:92:26"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 17985,
              "nodeType": "StructuredDocumentation",
              "src": "1388:127:26",
              "text": "@dev This emits when an operator is enabled or disabled for an owner.\n  The operator can manage all NFTs of the owner."
            },
            "id": 17993,
            "name": "ApprovalForAll",
            "nameLocation": "1524:14:26",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 17992,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17987,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "1555:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 17993,
                  "src": "1539:22:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17986,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1539:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17989,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_operator",
                  "nameLocation": "1579:9:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 17993,
                  "src": "1563:25:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17988,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1563:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17991,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_approved",
                  "nameLocation": "1595:9:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 17993,
                  "src": "1590:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 17990,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1590:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1538:67:26"
            },
            "src": "1518:88:26"
          },
          {
            "documentation": {
              "id": 17994,
              "nodeType": "StructuredDocumentation",
              "src": "1610:311:26",
              "text": "@notice Count all NFTs assigned to an owner\n @dev NFTs assigned to the zero address are considered invalid, and this\n  function throws for queries about the zero address.\n @param _owner An address for whom to query the balance\n @return The number of NFTs owned by `_owner`, possibly zero"
            },
            "functionSelector": "70a08231",
            "id": 18001,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "1933:9:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17997,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17996,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "1951:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 18001,
                  "src": "1943:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17995,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1943:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1942:16:26"
            },
            "returnParameters": {
              "id": 18000,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17999,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18001,
                  "src": "1982:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17998,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1982:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1981:9:26"
            },
            "scope": 18108,
            "src": "1924:67:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 18002,
              "nodeType": "StructuredDocumentation",
              "src": "1995:239:26",
              "text": "@notice Find the owner of an NFT\n @dev NFTs assigned to zero address are considered invalid, and queries\n  about them do throw.\n @param _tokenId The identifier for an NFT\n @return The address of the owner of the NFT"
            },
            "functionSelector": "6352211e",
            "id": 18009,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "2246:7:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18005,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18004,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "2262:8:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 18009,
                  "src": "2254:16:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18003,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2254:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2253:18:26"
            },
            "returnParameters": {
              "id": 18008,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18007,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18009,
                  "src": "2295:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18006,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2295:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2294:9:26"
            },
            "scope": 18108,
            "src": "2237:67:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 18010,
              "nodeType": "StructuredDocumentation",
              "src": "2308:818:26",
              "text": "@notice Transfers the ownership of an NFT from one address to another address\n @dev Throws unless `msg.sender` is the current owner, an authorized\n  operator, or the approved address for this NFT. Throws if `_from` is\n  not the current owner. Throws if `_to` is the zero address. Throws if\n  `_tokenId` is not a valid NFT. When transfer is complete, this function\n  checks if `_to` is a smart contract (code size > 0). If so, it calls\n  `onERC721Received` on `_to` and throws if the return value is not\n  `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.\n @param _from The current owner of the NFT\n @param _to The new owner\n @param _tokenId The NFT to transfer\n @param data Additional data with no specified format, sent in call to `_to`"
            },
            "functionSelector": "b88d4fde",
            "id": 18021,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "3138:16:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18019,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18012,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "3163:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 18021,
                  "src": "3155:13:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18011,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3155:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18014,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "3178:3:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 18021,
                  "src": "3170:11:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18013,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3170:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18016,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "3191:8:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 18021,
                  "src": "3183:16:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18015,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3183:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18018,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "3216:4:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 18021,
                  "src": "3201:19:26",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 18017,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3201:5:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3154:67:26"
            },
            "returnParameters": {
              "id": 18020,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3238:0:26"
            },
            "scope": 18108,
            "src": "3129:110:26",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 18022,
              "nodeType": "StructuredDocumentation",
              "src": "3243:338:26",
              "text": "@notice Transfers the ownership of an NFT from one address to another address\n @dev This works identically to the other function with an extra data parameter,\n  except this function just sets data to \"\".\n @param _from The current owner of the NFT\n @param _to The new owner\n @param _tokenId The NFT to transfer"
            },
            "functionSelector": "42842e0e",
            "id": 18031,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "3593:16:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18029,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18024,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "3618:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 18031,
                  "src": "3610:13:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18023,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3610:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18026,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "3633:3:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 18031,
                  "src": "3625:11:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18025,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3625:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18028,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "3646:8:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 18031,
                  "src": "3638:16:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18027,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3638:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3609:46:26"
            },
            "returnParameters": {
              "id": 18030,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3672:0:26"
            },
            "scope": 18108,
            "src": "3584:89:26",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 18032,
              "nodeType": "StructuredDocumentation",
              "src": "3677:557:26",
              "text": "@notice Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE\n  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE\n  THEY MAY BE PERMANENTLY LOST\n @dev Throws unless `msg.sender` is the current owner, an authorized\n  operator, or the approved address for this NFT. Throws if `_from` is\n  not the current owner. Throws if `_to` is the zero address. Throws if\n  `_tokenId` is not a valid NFT.\n @param _from The current owner of the NFT\n @param _to The new owner\n @param _tokenId The NFT to transfer"
            },
            "functionSelector": "23b872dd",
            "id": 18041,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "4246:12:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18039,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18034,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "4267:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 18041,
                  "src": "4259:13:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18033,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4259:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18036,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "4282:3:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 18041,
                  "src": "4274:11:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18035,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4274:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18038,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "4295:8:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 18041,
                  "src": "4287:16:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18037,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4287:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4258:46:26"
            },
            "returnParameters": {
              "id": 18040,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4321:0:26"
            },
            "scope": 18108,
            "src": "4237:85:26",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 18042,
              "nodeType": "StructuredDocumentation",
              "src": "4326:341:26",
              "text": "@notice Change or reaffirm the approved address for an NFT\n @dev The zero address indicates there is no approved address.\n  Throws unless `msg.sender` is the current NFT owner, or an authorized\n  operator of the current owner.\n @param _approved The new approved NFT controller\n @param _tokenId The NFT to approve"
            },
            "functionSelector": "095ea7b3",
            "id": 18049,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "4679:7:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18047,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18044,
                  "mutability": "mutable",
                  "name": "_approved",
                  "nameLocation": "4695:9:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 18049,
                  "src": "4687:17:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18043,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4687:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18046,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "4714:8:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 18049,
                  "src": "4706:16:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18045,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4706:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4686:37:26"
            },
            "returnParameters": {
              "id": 18048,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4740:0:26"
            },
            "scope": 18108,
            "src": "4670:71:26",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 18050,
              "nodeType": "StructuredDocumentation",
              "src": "4745:374:26",
              "text": "@notice Enable or disable approval for a third party (\"operator\") to manage\n  all of `msg.sender`'s assets\n @dev Emits the ApprovalForAll event. The contract MUST allow\n  multiple operators per owner.\n @param _operator Address to add to the set of authorized operators\n @param _approved True if the operator is approved, false to revoke approval"
            },
            "functionSelector": "a22cb465",
            "id": 18057,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "5131:17:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18055,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18052,
                  "mutability": "mutable",
                  "name": "_operator",
                  "nameLocation": "5157:9:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 18057,
                  "src": "5149:17:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18051,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5149:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18054,
                  "mutability": "mutable",
                  "name": "_approved",
                  "nameLocation": "5173:9:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 18057,
                  "src": "5168:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 18053,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5168:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5148:35:26"
            },
            "returnParameters": {
              "id": 18056,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5192:0:26"
            },
            "scope": 18108,
            "src": "5122:71:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 18058,
              "nodeType": "StructuredDocumentation",
              "src": "5197:254:26",
              "text": "@notice Get the approved address for a single NFT\n @dev Throws if `_tokenId` is not a valid NFT.\n @param _tokenId The NFT to find the approved address for\n @return The approved address for this NFT, or the zero address if there is none"
            },
            "functionSelector": "081812fc",
            "id": 18065,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nameLocation": "5463:11:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18061,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18060,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "5483:8:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 18065,
                  "src": "5475:16:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18059,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5475:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5474:18:26"
            },
            "returnParameters": {
              "id": 18064,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18063,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18065,
                  "src": "5516:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18062,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5516:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5515:9:26"
            },
            "scope": 18108,
            "src": "5454:71:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 18066,
              "nodeType": "StructuredDocumentation",
              "src": "5529:284:26",
              "text": "@notice Query if an address is an authorized operator for another address\n @param _owner The address that owns the NFTs\n @param _operator The address that acts on behalf of the owner\n @return True if `_operator` is an approved operator for `_owner`, false otherwise"
            },
            "functionSelector": "e985e9c5",
            "id": 18075,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "5825:16:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18071,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18068,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "5850:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 18075,
                  "src": "5842:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18067,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5842:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18070,
                  "mutability": "mutable",
                  "name": "_operator",
                  "nameLocation": "5866:9:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 18075,
                  "src": "5858:17:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18069,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5858:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5841:35:26"
            },
            "returnParameters": {
              "id": 18074,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18073,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18075,
                  "src": "5900:4:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 18072,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5900:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5899:6:26"
            },
            "scope": 18108,
            "src": "5816:90:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 18076,
              "nodeType": "StructuredDocumentation",
              "src": "5910:363:26",
              "text": "@notice Query if a contract implements an interface\n @param interfaceID The interface identifier, as specified in ERC-165\n @dev Interface identification is specified in ERC-165. This function\n  uses less than 30,000 gas.\n @return `true` if the contract implements `interfaceID` and\n  `interfaceID` is not 0xffffffff, `false` otherwise"
            },
            "functionSelector": "01ffc9a7",
            "id": 18083,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "6285:17:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18079,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18078,
                  "mutability": "mutable",
                  "name": "interfaceID",
                  "nameLocation": "6310:11:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 18083,
                  "src": "6303:18:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 18077,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "6303:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6302:20:26"
            },
            "returnParameters": {
              "id": 18082,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18081,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18083,
                  "src": "6346:4:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 18080,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6346:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6345:6:26"
            },
            "scope": 18108,
            "src": "6276:76:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 18084,
              "nodeType": "StructuredDocumentation",
              "src": "6356:205:26",
              "text": "@notice Count NFTs tracked by this contract\n @return A count of valid NFTs tracked by this contract, where each one of\n  them has an assigned and queryable owner not equal to the zero address"
            },
            "functionSelector": "18160ddd",
            "id": 18089,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "6573:11:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18085,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6584:2:26"
            },
            "returnParameters": {
              "id": 18088,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18087,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18089,
                  "src": "6610:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18086,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6610:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6609:9:26"
            },
            "scope": 18108,
            "src": "6564:55:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 18090,
              "nodeType": "StructuredDocumentation",
              "src": "6623:231:26",
              "text": "@notice Enumerate valid NFTs\n @dev Throws if `_index` >= `totalSupply()`.\n @param _index A counter less than `totalSupply()`\n @return The token identifier for the `_index`th NFT,\n  (sort order not specified)"
            },
            "functionSelector": "4f6ccce7",
            "id": 18097,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tokenByIndex",
            "nameLocation": "6866:12:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18093,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18092,
                  "mutability": "mutable",
                  "name": "_index",
                  "nameLocation": "6887:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 18097,
                  "src": "6879:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18091,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6879:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6878:16:26"
            },
            "returnParameters": {
              "id": 18096,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18095,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18097,
                  "src": "6918:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18094,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6918:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6917:9:26"
            },
            "scope": 18108,
            "src": "6857:70:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 18098,
              "nodeType": "StructuredDocumentation",
              "src": "6931:422:26",
              "text": "@notice Enumerate NFTs assigned to an owner\n @dev Throws if `_index` >= `balanceOf(_owner)` or if\n  `_owner` is the zero address, representing invalid NFTs.\n @param _owner An address where we are interested in NFTs owned by them\n @param _index A counter less than `balanceOf(_owner)`\n @return The token identifier for the `_index`th NFT assigned to `_owner`,\n   (sort order not specified)"
            },
            "functionSelector": "2f745c59",
            "id": 18107,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tokenOfOwnerByIndex",
            "nameLocation": "7365:19:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18100,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "7393:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 18107,
                  "src": "7385:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18099,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7385:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18102,
                  "mutability": "mutable",
                  "name": "_index",
                  "nameLocation": "7409:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 18107,
                  "src": "7401:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18101,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7401:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7384:32:26"
            },
            "returnParameters": {
              "id": 18106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18105,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18107,
                  "src": "7440:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7440:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7439:9:26"
            },
            "scope": 18108,
            "src": "7356:93:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 18109,
        "src": "107:7344:26",
        "usedErrors": []
      }
    ],
    "src": "32:7420:26"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.0",
  "updatedAt": "2021-10-29T09:01:54.504Z",
  "devdoc": {
    "events": {
      "Approval(address,address,uint256)": {
        "details": "This emits when the approved address for an NFT is changed or  reaffirmed. The zero address indicates there is no approved address.  When a Transfer event emits, this also indicates that the approved  address for that NFT (if any) is reset to none."
      },
      "ApprovalForAll(address,address,bool)": {
        "details": "This emits when an operator is enabled or disabled for an owner.  The operator can manage all NFTs of the owner."
      },
      "Transfer(address,address,uint256)": {
        "details": "This emits when ownership of any NFT changes by any mechanism.  This event emits when NFTs are created (`from` == 0) and destroyed  (`to` == 0). Exception: during contract creation, any number of NFTs  may be created and assigned without emitting Transfer. At the time of  any transfer, the approved address for that NFT (if any) is reset to none."
      }
    },
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "The zero address indicates there is no approved address.  Throws unless `msg.sender` is the current NFT owner, or an authorized  operator of the current owner.",
        "params": {
          "_approved": "The new approved NFT controller",
          "_tokenId": "The NFT to approve"
        }
      },
      "balanceOf(address)": {
        "details": "NFTs assigned to the zero address are considered invalid, and this  function throws for queries about the zero address.",
        "params": {
          "_owner": "An address for whom to query the balance"
        },
        "returns": {
          "_0": "The number of NFTs owned by `_owner`, possibly zero"
        }
      },
      "createNFT(address,string,uint8,uint8)": {
        "details": "Creates a new NFT"
      },
      "getApproved(uint256)": {
        "details": "Throws if `_tokenId` is not a valid NFT.",
        "params": {
          "_tokenId": "The NFT to find the approved address for"
        },
        "returns": {
          "_0": "The approved address for this NFT, or the zero address if there is none"
        }
      },
      "getNFT(uint256)": {
        "details": "Gets a NFT info"
      },
      "isApprovedForAll(address,address)": {
        "params": {
          "_operator": "The address that acts on behalf of the owner",
          "_owner": "The address that owns the NFTs"
        },
        "returns": {
          "_0": "True if `_operator` is an approved operator for `_owner`, false otherwise"
        }
      },
      "ownerOf(uint256)": {
        "details": "NFTs assigned to zero address are considered invalid, and queries  about them do throw.",
        "params": {
          "_tokenId": "The identifier for an NFT"
        },
        "returns": {
          "_0": "The address of the owner of the NFT"
        }
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "This works identically to the other function with an extra data parameter,  except this function just sets data to \"\".",
        "params": {
          "_from": "The current owner of the NFT",
          "_to": "The new owner",
          "_tokenId": "The NFT to transfer"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT. When transfer is complete, this function  checks if `_to` is a smart contract (code size > 0). If so, it calls  `onERC721Received` on `_to` and throws if the return value is not  `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.",
        "params": {
          "_from": "The current owner of the NFT",
          "_to": "The new owner",
          "_tokenId": "The NFT to transfer",
          "data": "Additional data with no specified format, sent in call to `_to`"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Emits the ApprovalForAll event. The contract MUST allow  multiple operators per owner.",
        "params": {
          "_approved": "True if the operator is approved, false to revoke approval",
          "_operator": "Address to add to the set of authorized operators"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "Interface identification is specified in ERC-165. This function  uses less than 30,000 gas.",
        "params": {
          "interfaceID": "The interface identifier, as specified in ERC-165"
        },
        "returns": {
          "_0": "`true` if the contract implements `interfaceID` and  `interfaceID` is not 0xffffffff, `false` otherwise"
        }
      },
      "tokenByIndex(uint256)": {
        "details": "Throws if `_index` >= `totalSupply()`.",
        "params": {
          "_index": "A counter less than `totalSupply()`"
        },
        "returns": {
          "_0": "The token identifier for the `_index`th NFT,  (sort order not specified)"
        }
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Throws if `_index` >= `balanceOf(_owner)` or if  `_owner` is the zero address, representing invalid NFTs.",
        "params": {
          "_index": "A counter less than `balanceOf(_owner)`",
          "_owner": "An address where we are interested in NFTs owned by them"
        },
        "returns": {
          "_0": "The token identifier for the `_index`th NFT assigned to `_owner`,   (sort order not specified)"
        }
      },
      "totalSupply()": {
        "returns": {
          "_0": "A count of valid NFTs tracked by this contract, where each one of  them has an assigned and queryable owner not equal to the zero address"
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT.",
        "params": {
          "_from": "The current owner of the NFT",
          "_to": "The new owner",
          "_tokenId": "The NFT to transfer"
        }
      }
    },
    "title": "Interface for our ERC721 token",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "approve(address,uint256)": {
        "notice": "Change or reaffirm the approved address for an NFT"
      },
      "balanceOf(address)": {
        "notice": "Count all NFTs assigned to an owner"
      },
      "getApproved(uint256)": {
        "notice": "Get the approved address for a single NFT"
      },
      "isApprovedForAll(address,address)": {
        "notice": "Query if an address is an authorized operator for another address"
      },
      "ownerOf(uint256)": {
        "notice": "Find the owner of an NFT"
      },
      "safeTransferFrom(address,address,uint256)": {
        "notice": "Transfers the ownership of an NFT from one address to another address"
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "notice": "Transfers the ownership of an NFT from one address to another address"
      },
      "setApprovalForAll(address,bool)": {
        "notice": "Enable or disable approval for a third party (\"operator\") to manage  all of `msg.sender`'s assets"
      },
      "supportsInterface(bytes4)": {
        "notice": "Query if a contract implements an interface"
      },
      "tokenByIndex(uint256)": {
        "notice": "Enumerate valid NFTs"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "notice": "Enumerate NFTs assigned to an owner"
      },
      "totalSupply()": {
        "notice": "Count NFTs tracked by this contract"
      },
      "transferFrom(address,address,uint256)": {
        "notice": "Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE  THEY MAY BE PERMANENTLY LOST"
      }
    },
    "version": 1
  }
}