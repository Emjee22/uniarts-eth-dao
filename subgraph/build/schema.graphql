type ExampleEntity @entity {
  id: ID!
  count: BigInt!
  owner: Bytes! # address
  approved: Bytes! # address
}

type All @entity {
  id: ID!
  numTokenContracts: BigInt!
  numTokens: BigInt!
  numOwners: BigInt!
}

type Token @entity {
  id: ID!
  contract: TokenContract!
  tokenID: BigInt!
  owner: Owner!
  mintTime: BigInt!
  tokenURI: String!
}

type TokenContract @entity {
  id: ID!
  name: String,
  symbol: String,
  doAllAddressesOwnTheirIdByDefault: Boolean!
  supportsEIP721Metadata: Boolean!
  tokens: [Token!]! @derivedFrom(field: "contract")
  numTokens: BigInt!
  numOwners: BigInt!
}

type TokenInfo @entity {
  id: ID!
  title: String!
  class_id: BigInt!
  size: BigInt!
}

type Owner @entity {
  id: ID!
  tokens: [Token!]! @derivedFrom(field: "owner")
  numTokens: BigInt!
}

type OwnerPerTokenContract @entity {
  id: ID!
  owner: Owner!
  contract: TokenContract!
  numTokens: BigInt!
}

type TokenTransaction @entity {
  id: ID!
  token_id: BigInt!
  tx_hash: String! # tx_hash
}

type AuctionList @entity {
  id: ID!
  count: BigInt!
  creatorAddress: Bytes! # address
  matchId: String! # string
  openBlock: BigInt!
  expiryBlock: BigInt!
  increment: BigInt!
  expiryExtension: BigInt!
  tokenIndex: BigInt!
  nft_contract_address: Bytes! # address
  nft_token_id: BigInt!
  nft_min_bid: BigInt!
  nft_fixed_price: BigInt!
}

type AuctionBidList @entity {
  id: ID!
  matchId: String! # string
  playerAddress: Bytes! # address
  tokenIndex: BigInt!
  bid: BigInt!
  expiryBlock: BigInt!
}

type AuctionRewardList @entity {
  id: ID!
  matchId: String! # string
  tokenIndex: BigInt!
  winnerAddress: Bytes! # address
}

type TrustMarketplaceOrder @entity {
  id: ID!
  seller: Bytes! # address
  nft_address: Bytes! # address
  token_id: BigInt!
  price_in_wei: BigInt!
  expires_at: BigInt!
  is_succ: BigInt!
  succ_block_number: BigInt!
  tx_hash: String! # tx_hash
}

type TrustMarketplaceBid @entity {
  id: ID!
  nft_address: Bytes! # address
  token_id: BigInt!
  bidder: Bytes! # address
  price_in_wei: BigInt!
  expires_at: BigInt!
  tx_hash: String! # tx_hash
  block_number: BigInt!
}